// Generated by view binder compiler. Do not edit!
package com.student.basic_ui.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.CheckBox;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.progressindicator.LinearProgressIndicator;
import com.student.basic_ui.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentSecondBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button btnSnackBar;

  @NonNull
  public final Button buttonSecond;

  @NonNull
  public final CheckBox check1;

  @NonNull
  public final CheckBox check2;

  @NonNull
  public final CheckBox check3;

  @NonNull
  public final FloatingActionButton fab;

  @NonNull
  public final LinearProgressIndicator progessbar;

  @NonNull
  public final TextView textviewSecond;

  private FragmentSecondBinding(@NonNull ConstraintLayout rootView, @NonNull Button btnSnackBar,
      @NonNull Button buttonSecond, @NonNull CheckBox check1, @NonNull CheckBox check2,
      @NonNull CheckBox check3, @NonNull FloatingActionButton fab,
      @NonNull LinearProgressIndicator progessbar, @NonNull TextView textviewSecond) {
    this.rootView = rootView;
    this.btnSnackBar = btnSnackBar;
    this.buttonSecond = buttonSecond;
    this.check1 = check1;
    this.check2 = check2;
    this.check3 = check3;
    this.fab = fab;
    this.progessbar = progessbar;
    this.textviewSecond = textviewSecond;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentSecondBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentSecondBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_second, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentSecondBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.btnSnackBar;
      Button btnSnackBar = rootView.findViewById(id);
      if (btnSnackBar == null) {
        break missingId;
      }

      id = R.id.buttonSecond;
      Button buttonSecond = rootView.findViewById(id);
      if (buttonSecond == null) {
        break missingId;
      }

      id = R.id.check1;
      CheckBox check1 = rootView.findViewById(id);
      if (check1 == null) {
        break missingId;
      }

      id = R.id.check2;
      CheckBox check2 = rootView.findViewById(id);
      if (check2 == null) {
        break missingId;
      }

      id = R.id.check3;
      CheckBox check3 = rootView.findViewById(id);
      if (check3 == null) {
        break missingId;
      }

      id = R.id.fab;
      FloatingActionButton fab = rootView.findViewById(id);
      if (fab == null) {
        break missingId;
      }

      id = R.id.progessbar;
      LinearProgressIndicator progessbar = rootView.findViewById(id);
      if (progessbar == null) {
        break missingId;
      }

      id = R.id.textview_second;
      TextView textviewSecond = rootView.findViewById(id);
      if (textviewSecond == null) {
        break missingId;
      }

      return new FragmentSecondBinding((ConstraintLayout) rootView, btnSnackBar, buttonSecond,
          check1, check2, check3, fab, progessbar, textviewSecond);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
